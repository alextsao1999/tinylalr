//
// Created by Alex's tiny lalr.
//
#include "parser.h"
ParserSymbol ParserSymbols[] = {
        {1, 0, "@start"},
        {1, 0, "@end"},
        {1, 2, "error"},
        {0, 3, "+"},
        {0, 4, "-"},
        {0, 5, "*"},
        {0, 6, "/"},
        {1, 7, "expr"},
        {0, 8, "[ \n\r\t]+"},
        {0, 9, "("},
        {0, 10, ")"},
        {0, 11, "[0-9]+"},
};
int LexerWhitespaceSymbol = 8;
LexerTransition LexerTransitions[] = {
        {9, 9, &LexerStates[1]},
        {10, 10, &LexerStates[1]},
        {13, 13, &LexerStates[1]},
        {32, 32, &LexerStates[1]},
        {40, 40, &LexerStates[2]},
        {41, 41, &LexerStates[3]},
        {42, 42, &LexerStates[4]},
        {43, 43, &LexerStates[5]},
        {45, 45, &LexerStates[6]},
        {47, 47, &LexerStates[7]},
        {48, 57, &LexerStates[8]},
        {9, 9, &LexerStates[1]},
        {10, 10, &LexerStates[1]},
        {13, 13, &LexerStates[1]},
        {32, 32, &LexerStates[1]},
        {48, 57, &LexerStates[8]},
};
LexerState LexerStates[] = {
        {&LexerTransitions[0], 11, 0},
        {&LexerTransitions[11], 4, 8},
        {&LexerTransitions[15], 0, 9},
        {&LexerTransitions[15], 0, 10},
        {&LexerTransitions[15], 0, 5},
        {&LexerTransitions[15], 0, 3},
        {&LexerTransitions[15], 0, 4},
        {&LexerTransitions[15], 0, 6},
        {&LexerTransitions[15], 1, 11},
};
ReduceAction ParserActions[] = {
        {"left", "$1", 0, 0},
        {"op", "+", 2, 0},
        {"right", "$3", 0, 2},
        {"left", "$1", 0, 0},
        {"op", "-", 2, 0},
        {"right", "$3", 0, 2},
        {"left", "$1", 0, 0},
        {"op", "*", 2, 0},
        {"right", "$3", 0, 2},
        {"left", "$1", 0, 0},
        {"op", "/", 2, 0},
        {"right", "$3", 0, 2},
        {"compound", "$2", 0, 1},
        {"number", "@1", 1, 0},
        {"type", "number", 2, 0},
};

ParserTransition ParserTransitions[] = {
        {1, 7, &ParserStates[1], 0, 0, nullptr, 0},
        {1, 9, &ParserStates[2], 0, 0, nullptr, 0},
        {1, 11, &ParserStates[3], 0, 0, nullptr, 0},
        {2, 0, nullptr, 0, 1, nullptr, 0},
        {1, 3, &ParserStates[4], 0, 0, nullptr, 0},
        {1, 4, &ParserStates[5], 0, 0, nullptr, 0},
        {1, 5, &ParserStates[6], 0, 0, nullptr, 0},
        {1, 6, &ParserStates[7], 0, 0, nullptr, 0},
        {1, 7, &ParserStates[8], 0, 0, nullptr, 0},
        {1, 9, &ParserStates[2], 0, 0, nullptr, 0},
        {1, 11, &ParserStates[3], 0, 0, nullptr, 0},
        {2, 0, nullptr, 7, 1, &ParserActions[13], 2},
        {2, 3, nullptr, 7, 1, &ParserActions[13], 2},
        {2, 4, nullptr, 7, 1, &ParserActions[13], 2},
        {2, 5, nullptr, 7, 1, &ParserActions[13], 2},
        {2, 6, nullptr, 7, 1, &ParserActions[13], 2},
        {2, 10, nullptr, 7, 1, &ParserActions[13], 2},
        {1, 7, &ParserStates[9], 0, 0, nullptr, 0},
        {1, 9, &ParserStates[2], 0, 0, nullptr, 0},
        {1, 11, &ParserStates[3], 0, 0, nullptr, 0},
        {1, 7, &ParserStates[11], 0, 0, nullptr, 0},
        {1, 9, &ParserStates[2], 0, 0, nullptr, 0},
        {1, 11, &ParserStates[3], 0, 0, nullptr, 0},
        {1, 7, &ParserStates[10], 0, 0, nullptr, 0},
        {1, 9, &ParserStates[2], 0, 0, nullptr, 0},
        {1, 11, &ParserStates[3], 0, 0, nullptr, 0},
        {1, 7, &ParserStates[12], 0, 0, nullptr, 0},
        {1, 9, &ParserStates[2], 0, 0, nullptr, 0},
        {1, 11, &ParserStates[3], 0, 0, nullptr, 0},
        {1, 3, &ParserStates[4], 0, 0, nullptr, 0},
        {1, 4, &ParserStates[5], 0, 0, nullptr, 0},
        {1, 5, &ParserStates[6], 0, 0, nullptr, 0},
        {1, 6, &ParserStates[7], 0, 0, nullptr, 0},
        {1, 10, &ParserStates[13], 0, 0, nullptr, 0},
        {2, 0, nullptr, 7, 3, &ParserActions[0], 3},
        {2, 3, &ParserStates[4], 7, 3, &ParserActions[0], 3},
        {1, 4, &ParserStates[5], 0, 0, nullptr, 0},
        {1, 5, &ParserStates[6], 0, 0, nullptr, 0},
        {1, 6, &ParserStates[7], 0, 0, nullptr, 0},
        {2, 10, nullptr, 7, 3, &ParserActions[0], 3},
        {2, 0, nullptr, 7, 3, &ParserActions[6], 3},
        {2, 3, &ParserStates[4], 7, 3, &ParserActions[6], 3},
        {2, 4, &ParserStates[5], 7, 3, &ParserActions[6], 3},
        {2, 5, &ParserStates[6], 7, 3, &ParserActions[6], 3},
        {1, 6, &ParserStates[7], 0, 0, nullptr, 0},
        {2, 10, nullptr, 7, 3, &ParserActions[6], 3},
        {2, 0, nullptr, 7, 3, &ParserActions[3], 3},
        {2, 3, &ParserStates[4], 7, 3, &ParserActions[3], 3},
        {2, 4, &ParserStates[5], 7, 3, &ParserActions[3], 3},
        {1, 5, &ParserStates[6], 0, 0, nullptr, 0},
        {1, 6, &ParserStates[7], 0, 0, nullptr, 0},
        {2, 10, nullptr, 7, 3, &ParserActions[3], 3},
        {2, 0, nullptr, 7, 3, &ParserActions[9], 3},
        {2, 3, &ParserStates[4], 7, 3, &ParserActions[9], 3},
        {2, 4, &ParserStates[5], 7, 3, &ParserActions[9], 3},
        {2, 5, &ParserStates[6], 7, 3, &ParserActions[9], 3},
        {2, 6, &ParserStates[7], 7, 3, &ParserActions[9], 3},
        {2, 10, nullptr, 7, 3, &ParserActions[9], 3},
        {2, 0, nullptr, 7, 3, &ParserActions[12], 1},
        {2, 3, nullptr, 7, 3, &ParserActions[12], 1},
        {2, 4, nullptr, 7, 3, &ParserActions[12], 1},
        {2, 5, nullptr, 7, 3, &ParserActions[12], 1},
        {2, 6, nullptr, 7, 3, &ParserActions[12], 1},
        {2, 10, nullptr, 7, 3, &ParserActions[12], 1},
};
ParserState ParserStates[] = {
        {&ParserTransitions[0], 3},
        {&ParserTransitions[3], 5},
        {&ParserTransitions[8], 3},
        {&ParserTransitions[11], 6},
        {&ParserTransitions[17], 3},
        {&ParserTransitions[20], 3},
        {&ParserTransitions[23], 3},
        {&ParserTransitions[26], 3},
        {&ParserTransitions[29], 5},
        {&ParserTransitions[34], 6},
        {&ParserTransitions[40], 6},
        {&ParserTransitions[46], 6},
        {&ParserTransitions[52], 6},
        {&ParserTransitions[58], 6},
};
